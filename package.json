{
  "version": "0.1.0",
  "name": "object-observer",
  "license": "MIT",
  "description": "Library to observe the object when values from object read or write ",
  "main": "dist/index.js",
  "typings": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "engines": {
    "node": ">=10"
  },
  "scripts": {
    "start": "tsdx watch",
    "build": "tsdx build",
    "test": "tsdx test",
    "test:watch": "tsdx test --watchAll",
    "test:coverage": "tsdx test --coverage",
    "lint": "tsdx lint",
    "prepare": "tsdx build",
    "size": "size-limit",
    "analyze": "size-limit --why"
  },
  "peerDependencies": {},
  "husky": {
    "hooks": {
      "pre-commit": "tsdx lint"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ganeshpatil0101/object-watcher.git"
  },
  "keywords": [
    "Object Watcher",
    "watcher",
    "Object Observer",
    "Observer",
    "getter",
    "setter",
    "callback",
    "of",
    "object"
  ],
  "bugs": {
    "url": "https://github.com/ganeshpatil0101/object-watcher/issues"
  },
  "homepage": "https://github.com/ganeshpatil0101/object-watcher#readme",
  "prettier": {
    "printWidth": 80,
    "semi": true,
    "singleQuote": true,
    "trailingComma": "es5"
  },
  "author": "Ganesh Patil",
  "module": "dist/object-watcher-v1.esm.js",
  "size-limit": [
    {
      "path": "dist/object-watcher-v1.cjs.production.min.js",
      "limit": "10 KB"
    },
    {
      "path": "dist/object-watcher-v1.esm.js",
      "limit": "10 KB"
    }
  ],
  "devDependencies": {
    "@size-limit/preset-small-lib": "^8.1.0",
    "husky": "^8.0.1",
    "size-limit": "^8.1.0",
    "tsdx": "^0.14.1",
    "tslib": "^2.4.0",
    "typescript": "^4.8.3"
  }
}
